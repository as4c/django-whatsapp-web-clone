# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.4.4
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-03-27T15:03:41Z"
  labels:
    app: prod-pod
  name: prod-pod
spec:
  containers:
  - args:
    - run-redis
    image: registry.redhat.io/rhel8/redis-5:1-160.1647451816
    name: redis-svc
    ports:
    - containerPort: 80
      hostPort: 8081
    - containerPort: 8080
      hostPort: 8080
    - containerPort: 6379
      hostPort: 6379
    - containerPort: 5432
      hostPort: 5432
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /var/lib/redis/data
      name: 6a5cff8b4d3f8f617bbb8e4b900ce346bff812509a7f966b05d86193295d5775-pvc
  - args:
    - run-postgresql
    image: registry.redhat.io/rhel8/postgresql-12:1-99.1647451835
    name: prod-pod-postgres-svc
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    env:
      - name: POSTGRESQL_USER
        value: user
      - name: POSTGRESQL_PASSWORD
        value: 12345
      - name: POSTGRESQL_DATABASE
        value: chatdb 
  - args:
    - /bin/sh
    - -c
    - python manage.py runserver 0.0.0.0:8080
    image: localhost/django-app:latest
    name: happybrattain
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
  restartPolicy: Never
  volumes:
  - name: 6a5cff8b4d3f8f617bbb8e4b900ce346bff812509a7f966b05d86193295d5775-pvc
    persistentVolumeClaim:
      claimName: 6a5cff8b4d3f8f617bbb8e4b900ce346bff812509a7f966b05d86193295d5775
status: {}

